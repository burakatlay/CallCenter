/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.callcenter.helper;

import com.callcenter.database.SubProjectProcesses;
import com.callcenter.database.WorkingProcesses;
import com.callcenter.entity.Employee;
import com.callcenter.entity.SubProject;
import com.callcenter.entity.Working;
import com.callcenter.frame.MainGUI;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;

/**
 *
 * @author burakatlay
 */
public class HomePanel extends javax.swing.JPanel {

    private DefaultTableModel modelProjectView;
    private Object[] dataProjectview;
    private SubProject subProject = new SubProject(0, "");
    private Employee employee = new Employee(3, "", "", "", "", "", "");
    private Working working = new Working();
    
    /**
     * Creates new form HomePanel
     */
    public HomePanel() {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProjectView = new javax.swing.JTable();
        BtnCallUp = new javax.swing.JButton();
        BtnCallDown = new javax.swing.JButton();
        TxtBonus = new javax.swing.JTextField();
        BtnAddBonus = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableWorking = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        monthlyEarnings = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dailyEarnings1 = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setPreferredSize(new java.awt.Dimension(600, 330));
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Please select the project.");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, -1, 20));

        tableProjectView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ProjectId", "Project Name", "SubProjectId", "Subproject Name", "price", "calltype"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableProjectView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProjectViewMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProjectView);
        if (tableProjectView.getColumnModel().getColumnCount() > 0) {
            tableProjectView.getColumnModel().getColumn(0).setMinWidth(0);
            tableProjectView.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableProjectView.getColumnModel().getColumn(0).setMaxWidth(0);
            tableProjectView.getColumnModel().getColumn(1).setMinWidth(160);
            tableProjectView.getColumnModel().getColumn(1).setPreferredWidth(160);
            tableProjectView.getColumnModel().getColumn(1).setMaxWidth(160);
            tableProjectView.getColumnModel().getColumn(2).setMinWidth(0);
            tableProjectView.getColumnModel().getColumn(2).setPreferredWidth(0);
            tableProjectView.getColumnModel().getColumn(2).setMaxWidth(0);
            tableProjectView.getColumnModel().getColumn(4).setMinWidth(0);
            tableProjectView.getColumnModel().getColumn(4).setPreferredWidth(0);
            tableProjectView.getColumnModel().getColumn(4).setMaxWidth(0);
            tableProjectView.getColumnModel().getColumn(5).setMinWidth(0);
            tableProjectView.getColumnModel().getColumn(5).setPreferredWidth(0);
            tableProjectView.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 350, 140));

        BtnCallUp.setText("Call Up");
        BtnCallUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnCallUpMouseClicked(evt);
            }
        });
        BtnCallUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCallUpActionPerformed(evt);
            }
        });
        add(BtnCallUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, 90, -1));

        BtnCallDown.setText("Call Down");
        BtnCallDown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnCallDownMouseClicked(evt);
            }
        });
        BtnCallDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCallDownActionPerformed(evt);
            }
        });
        add(BtnCallDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, 90, -1));

        TxtBonus.setText("0");
        add(TxtBonus, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 120, -1));

        BtnAddBonus.setText("Bonus Update");
        BtnAddBonus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnAddBonusMouseClicked(evt);
            }
        });
        BtnAddBonus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddBonusActionPerformed(evt);
            }
        });
        add(BtnAddBonus, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 120, -1));

        jLabel2.setText("My daily call handling");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        TableWorking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "WorkingId", "Project Name", "Sub Project Name", "Call Count", "Bonus", "Total", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TableWorking);
        if (TableWorking.getColumnModel().getColumnCount() > 0) {
            TableWorking.getColumnModel().getColumn(0).setMinWidth(0);
            TableWorking.getColumnModel().getColumn(0).setPreferredWidth(0);
            TableWorking.getColumnModel().getColumn(0).setMaxWidth(0);
            TableWorking.getColumnModel().getColumn(1).setMinWidth(120);
            TableWorking.getColumnModel().getColumn(1).setPreferredWidth(120);
            TableWorking.getColumnModel().getColumn(1).setMaxWidth(120);
            TableWorking.getColumnModel().getColumn(2).setMinWidth(150);
            TableWorking.getColumnModel().getColumn(2).setPreferredWidth(150);
            TableWorking.getColumnModel().getColumn(2).setMaxWidth(150);
            TableWorking.getColumnModel().getColumn(3).setMinWidth(70);
            TableWorking.getColumnModel().getColumn(3).setPreferredWidth(70);
            TableWorking.getColumnModel().getColumn(3).setMaxWidth(70);
            TableWorking.getColumnModel().getColumn(4).setMinWidth(50);
            TableWorking.getColumnModel().getColumn(4).setPreferredWidth(50);
            TableWorking.getColumnModel().getColumn(4).setMaxWidth(50);
            TableWorking.getColumnModel().getColumn(5).setMinWidth(50);
            TableWorking.getColumnModel().getColumn(5).setPreferredWidth(50);
            TableWorking.getColumnModel().getColumn(5).setMaxWidth(50);
        }

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 580, 110));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel3.setText("Monthly Earnings:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, -1, -1));

        monthlyEarnings.setText("0 €");
        add(monthlyEarnings, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 300, -1, -1));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel4.setText("Daily Earnings:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        dailyEarnings1.setText("0 €");
        add(dailyEarnings1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void BtnCallDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCallDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnCallDownActionPerformed

    private void BtnAddBonusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddBonusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnAddBonusActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        try {
            this.projectViewAddTable();
            this.workingViewAddTable();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formAncestorAdded

    private void tableProjectViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProjectViewMouseClicked
        int row = tableProjectView.getSelectedRow();
        modelProjectView = (DefaultTableModel) tableProjectView.getModel();
        int projectId = (int)modelProjectView.getValueAt(row, 0);
        String projectName = modelProjectView.getValueAt(row, 1).toString();
        int subProjectId = (int)modelProjectView.getValueAt(row, 2);
        String subProjectName = modelProjectView.getValueAt(row, 3).toString();
        double price = (double)modelProjectView.getValueAt(row, 4);
        String callType = modelProjectView.getValueAt(row, 5).toString();
        subProject = new SubProject(subProjectId, subProjectName, price, callType, projectId, projectName);
        jLabel1.setText(projectId + "-" + projectName + " - " + subProjectId + "-" +subProjectName);
        WorkingProcesses workingProcesses = new WorkingProcesses();
        try {
            boolean control = workingProcesses.findWorking(employee, subProject);
            if (control) {
                TxtBonus.setText(String.valueOf(workingProcesses.getBonus()));
            }else{
                TxtBonus.setText("0");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tableProjectViewMouseClicked

    private void BtnCallUpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnCallUpMouseClicked
        WorkingProcesses workingProcesses = new WorkingProcesses();
        boolean deneme = false;
        try {
            if (jLabel1.getText()!="Please select the project.") {
                deneme = workingProcesses.callIncrease(employee, subProject);
            }else{
                Helper.showMsg("unselect");
            }
            
            
            if (deneme) {
                //Helper.showMsg("add");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            this.workingViewAddTable();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_BtnCallUpMouseClicked

    private void BtnCallUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCallUpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnCallUpActionPerformed

    private void BtnAddBonusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnAddBonusMouseClicked
        double bonus = Double.parseDouble(TxtBonus.getText());
        WorkingProcesses workingProcesses = new WorkingProcesses();
        try {
            if (jLabel1.getText()!="Please select the project.") {
                workingProcesses.addBonus(bonus, employee, subProject);
            }else{
                Helper.showMsg("unselect");
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            this.workingViewAddTable();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_BtnAddBonusMouseClicked

    private void BtnCallDownMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnCallDownMouseClicked
        boolean deneme = false;
        WorkingProcesses workingProcesses = new WorkingProcesses();
        try {
            
            if (jLabel1.getText()!="Please select the project.") {
                deneme = workingProcesses.callDown(employee, subProject);
            }else{
                Helper.showMsg("unselect");
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            this.workingViewAddTable();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(HomePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_BtnCallDownMouseClicked

    private void projectViewAddTable() throws ClassNotFoundException, SQLException {
        SubProjectProcesses subProjectProcesses = new SubProjectProcesses();
        int i = tableProjectView.getRowCount();

        modelProjectView = (DefaultTableModel) tableProjectView.getModel();
        for (int j = 0; j < i; j++) {
            modelProjectView.removeRow(0);
        }
        dataProjectview = new Object[6];
        for (SubProject subProjectList : subProjectProcesses.projectView()) {
            dataProjectview[0] = subProjectList.getProjectId();
            dataProjectview[1] = subProjectList.getProjectName();
            dataProjectview[2] = subProjectList.getSubProjectId();
            dataProjectview[3] = subProjectList.getSubProjectName();
            dataProjectview[4] = subProjectList.getPrice();
            dataProjectview[5] = subProjectList.getCallType();

            modelProjectView.addRow(dataProjectview);

        }
    }
    
    private void workingViewAddTable() throws ClassNotFoundException, SQLException {
        WorkingProcesses workingProcesses = new WorkingProcesses();
        int i = TableWorking.getRowCount();

        modelProjectView = (DefaultTableModel) TableWorking.getModel();
        for (int j = 0; j < i; j++) {
            modelProjectView.removeRow(0);
        }
        dataProjectview = new Object[7];
        for (Working working : workingProcesses.workingWiev()) {
            double total = 0;
            total = (working.getSubProject().getPrice() * working.getCount()) + working.getBonus();
            dataProjectview[0] = working.getWorkingId();
            dataProjectview[1] = working.getSubProject().getProjectName();
            dataProjectview[2] = working.getSubProject().getSubProjectName();
            dataProjectview[3] = working.getCount();
            dataProjectview[4] = working.getBonus();
            dataProjectview[5] = total;
            dataProjectview[6] = working.getDate();

            modelProjectView.addRow(dataProjectview);

        }
        this.dailyEarning();
        this.monthlyEarning();
    }
    
    private double dailyEarning() throws ClassNotFoundException, SQLException{
        double totalDailyEarning = 0;
        WorkingProcesses workingProcesses = new WorkingProcesses();
        totalDailyEarning = workingProcesses.dailyEarnings();
        dailyEarnings1.setText(String.format("%.2f",totalDailyEarning) + " €");
        return totalDailyEarning;
    }

    private double monthlyEarning() throws ClassNotFoundException, SQLException{
        double totalMonthlyEarning = 0;
        WorkingProcesses workingProcesses = new WorkingProcesses();
        totalMonthlyEarning = workingProcesses.monthlyEarnings();
        monthlyEarnings.setText(String.format("%.2f",totalMonthlyEarning) + " €");
        return totalMonthlyEarning;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAddBonus;
    private javax.swing.JButton BtnCallDown;
    private javax.swing.JButton BtnCallUp;
    private javax.swing.JTable TableWorking;
    private javax.swing.JTextField TxtBonus;
    private javax.swing.JLabel dailyEarnings1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel monthlyEarnings;
    private javax.swing.JTable tableProjectView;
    // End of variables declaration//GEN-END:variables
}
